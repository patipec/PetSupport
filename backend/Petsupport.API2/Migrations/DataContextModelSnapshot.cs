// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetSupport.Infrastructure.Data.Data;

namespace Petsupport.API2.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetSupport.Core.Entities.AddressDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double?>("Range")
                        .HasColumnType("float");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetType")
                        .HasColumnType("int");

                    b.Property<int>("PetWeight")
                        .HasColumnType("int");

                    b.Property<string>("PhotoGallery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.BasicPetsitterProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Petsitters");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.BasicUserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoGallery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BasicUserInfo");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.BookingMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetType")
                        .HasColumnType("int");

                    b.Property<int>("PetWeight")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BookingMessages");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.PetPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasicPetsitterProfileId")
                        .HasColumnType("int");

                    b.Property<int>("PetType")
                        .HasColumnType("int");

                    b.Property<int>("PetWeights")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasicPetsitterProfileId");

                    b.ToTable("PetPreference");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.PetService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasicPetsitterProfileId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ServiceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasicPetsitterProfileId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("AzureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BasicPetsitterProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("BasicUserInfoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsProfileCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("WantsToBePetsitter")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddressDetailsId");

                    b.HasIndex("BasicPetsitterProfileId");

                    b.HasIndex("BasicUserInfoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.Animal", b =>
                {
                    b.HasOne("PetSupport.Core.Entities.User", null)
                        .WithMany("Animals")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.BookingMessage", b =>
                {
                    b.HasOne("PetSupport.Core.Entities.User", "User")
                        .WithMany("BookingMessages")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.PetPreference", b =>
                {
                    b.HasOne("PetSupport.Core.Entities.BasicPetsitterProfile", null)
                        .WithMany("PetsitterPetPreferences")
                        .HasForeignKey("BasicPetsitterProfileId");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.PetService", b =>
                {
                    b.HasOne("PetSupport.Core.Entities.BasicPetsitterProfile", null)
                        .WithMany("PetServices")
                        .HasForeignKey("BasicPetsitterProfileId");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.User", b =>
                {
                    b.HasOne("PetSupport.Core.Entities.AddressDetails", "AddressDetails")
                        .WithMany()
                        .HasForeignKey("AddressDetailsId");

                    b.HasOne("PetSupport.Core.Entities.BasicPetsitterProfile", "BasicPetsitterProfile")
                        .WithMany()
                        .HasForeignKey("BasicPetsitterProfileId");

                    b.HasOne("PetSupport.Core.Entities.BasicUserInfo", "BasicUserInfo")
                        .WithMany()
                        .HasForeignKey("BasicUserInfoId");

                    b.Navigation("AddressDetails");

                    b.Navigation("BasicPetsitterProfile");

                    b.Navigation("BasicUserInfo");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.BasicPetsitterProfile", b =>
                {
                    b.Navigation("PetServices");

                    b.Navigation("PetsitterPetPreferences");
                });

            modelBuilder.Entity("PetSupport.Core.Entities.User", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("BookingMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
